openapi: 3.0.0
info:
  title: API de Restaurante
  description: API para manejar pedidos y mesas en un restaurante.
  version: "1.0.0"
servers:
  - url: http://localhost:3000
    description: Servidor local de desarrollo

paths:
  
  /api/restaurant/product:
   get:
      summary: Obtener datos de las mesas
      responses:
        "200":
          description: Lista de los datos de la mesa
          content:
            application/json:
             schema:
              type: array
              items:
                type: object
                properties:
                  id_product:
                    type: integer
                    description: id del producto
                  name_product:
                    type: string
                    description: nombre de la product
                  price:
                    type: integer
                    description: precio del producto
                  categoria_id:
                    type: integer
                    description: id de la categoria si es comida= 601 o bebida=600
        "500":
          description: Error en el servidor product
  
  /api/restaurant/categoria:
      get:
          summary: Obtener datos de las categorias
          responses:
            "200":
              description: Lista de los datos de las categorias
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        id_categoria:
                          type: integer
                          description: id de la categoria
                        nombre_categoria:
                          type: string
                          description: nombre de la categoria
            "500":
              description: Error en el servidor categoria
  
  /api/restaurant/admin:
    get:
        summary: Obtener datos de los administradores
        responses:
            "200":
              description: Lista de los datos de los administradores
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        id_admin:
                          type: integer
                          description: id del administrador
                        name_admin:
                          type: string
                          description: nombre del administrador
            "500":
              description: Error en el servidor admin
  
  /api/restaurant/waiter:
    get:
        summary: Obtener datos de los camareros
        responses:
            "200":
              description: Lista de los datos de los camareros
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: id del camarero
                        name:
                          type: string
                          description: nombre del camarero
            "500":
              description: Error en el servidor camarero        
  
  /api/restaurant/mesa:
    get:
      summary: Obtener datos de las mesas
      responses:
        "200":
          description: Lista de los datos de la mesa
          content:
            application/json:
             schema:
              type: array
              items:
                type: object
                properties:
                  id_mesa:
                    type: integer
                    description: id de la mesa
                  name_mesa:
                    type: string
                    description: nombre de la mesa
                  estado_mesa:
                    type: string
                    description: estado de la mesa
        "500":
          description: Error en el servidor mesa
  
  /api/restaurant/pedidos:
    get:
      summary: Obtener datos de los pedidos
      responses:
        "200":
          description: Lista de los pedidos
          content:
            application/json:
             schema:
              type: array
              items:
                type: object
                properties:
                  id_pedido:
                    type: integer
                    description: id del pedido
                  mesa_id:
                    type: integer
                    description: id de la mesa
                  inicio:
                    type: timestamp
                    description: hora en la que se recepcionó el pedido
                  fin:
                    type: timestamp
                    description: hora en la que finalizó el pedido (null aun no finaliza)
                  genero:
                    type: string
                    description: genero de la persona que pidió el pedido
                  camarero_id: 
                    type: integer
                    description: id del camarero que atendió el pedido
                  total_pedido:
                    type: integer
                    description: valor total del pedido
                  id_bebida:
                    type: integer
                    description: id de la bebida
                  bebida_cantidad:
                    type: integer
                    description: cantidad de bebida pedida
                  id_comida:
                    type: integer
                    description: id de la comida
                  comida_cantidad:
                    type: integer
                    description: cantidad de comida pedida
        "500":
          description: Error en el servidor mesa

  /api/restaurant/join:
    get:
      summary: Obtener información de los pedidos y estado de las mesas
      responses:
        "200":
          description: Lista de pedidos y estado de las mesas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_pedido:
                      type: integer
                      description: ID del pedido
                    id_mesa:
                      type: integer
                      description: ID de la mesa
                    estado_mesa:
                      type: string
                      description: Estado actual de la mesa
                    comida_nombre:
                      type: string
                      description: Nombre del producto de comida
                    cantidad_comida:
                      type: string
                      description: Cantidad de comida en el pedido
                    bebida_nombre:
                      type: string
                      description: Nombre del producto de bebida
                    cantidad_bebida:
                      type: string
                      description: Cantidad de bebida en el pedido
        "500":
          description: Error en el servidor
  /api/restaurant/finalizarPedido/{idPedido}:
    post:
      summary: Finalizar un pedido
      parameters:
        - name: idPedido
          in: path
          required: true
          description: ID del pedido que se desea finalizar
          schema:
            type: integer
      responses:
        "200":
          description: Pedido finalizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Pedido finalizado correctamente
        "400":
          description: No se pudo finalizar el pedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No se pudo finalizar el pedido
        "404":
          description: Pedido no encontrado o ya finalizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Pedido no encontrado o ya finalizado
        "500":
          description: Error en el servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Error interno del servidor
